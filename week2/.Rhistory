data$date <- ymd(data$date)
getwd()
setwd("C:/COURSERA/week2/")
data$date <- ymd(data$date)
data$date <- ymd()(data$date)
data$date <- ymd(data$date)
str(data)
setwd("C:/COURSERA/week2/")
activity <- read.csv("activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(fig.path = "../figures/", dev='pdf') # corrected path and added dev
setwd("C:/COURSERA/week2/")
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(fig.path = "../figures/", dev='pdf') # corrected path and added dev
activity <- read.csv("activity.csv", colClasses = c("numeric", "character",
"numeric"))
activity <- read.csv("../activity.csv", colClasses = c("numeric", "character",
"numeric"))
activity <- read.csv("./activity.csv", colClasses = c("numeric", "character",
"numeric"))
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(fig.path = "../figures/", dev='pdf') # corrected path and added dev
activity <- read.csv("./activity.csv", colClasses = c("numeric", "character",
"numeric"))
activity <- read.csv("/activity.csv", colClasses = c("numeric", "character",
"numeric"))
activity <- read.csv("activity.csv", colClasses = c("numeric", "character",
"numeric"))
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(fig.path = "../figures/", dev='pdf') # corrected path and added dev
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(fig.path = "../figures/", dev='pdf') # corrected path and added dev
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
setwd("C:/COURSERA/week2/")
setwd("C:/COURSERA/week2/")
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(fig.path = "../figures/", dev='pdf') # corrected path and added dev
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/week2/")
setwd("C:/COURSERA/week2/")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/week2/")
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/week2/figures/")
setwd("C:/COURSERA/week2/")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/week2/figures/")
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
setwd("C:/COURSERA/week2/")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/week2/figures/")
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
setwd("C:/COURSERA/week2/")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/week2/")
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
setwd("C:/COURSERA/week2/")
require("knitr")
opts_knit$set(root.dir = "C:/COURSERA/")
activity <- read.csv("C:/COURSERA/week2/activity.csv", colClasses = c("numeric", "character",
"numeric"))
head(activity)
names(activity)
library(lattice)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
StepsTotal <- aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
hist(StepsTotal$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal$steps)
median(StepsTotal$steps)
steps <- rep(NA, 61)
day <- rep("NA", 61)
stepsday <- tapply(activity$steps, activity$date, sum, na.rm = T)
length(stepsday)
for (i in 1:61) {
steps[i] <- stepsday[[i]]
day[i] <- names(stepsday)[i]
}
df <- data.frame(day, steps)
head(df)
hist(df$steps, main = "Total steps by day", xlab = "day", col = "green")
time_series <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
plot(row.names(time_series), time_series, type = "l", xlab = "5-min interval",
ylab = "Average across all Days", main = "Average number of steps taken",
col = "red")
max_interval <- which.max(time_series)
names(max_interval)
activity_NA <- sum(is.na(activity))
activity_NA
StepsAverage <- aggregate(steps ~ interval, data = activity, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(activity)) {
obs <- activity[i, ]
if (is.na(obs$steps)) {
steps <- subset(StepsAverage, interval == obs$interval)$steps
} else {
steps <- obs$steps
}
fillNA <- c(fillNA, steps)
}
new_activity <- activity
new_activity$steps <- fillNA
StepsTotal2 <- aggregate(steps ~ date, data = new_activity, sum, na.rm = TRUE)
hist(StepsTotal2$steps, main = "Total steps by day", xlab = "day", col = "red")
mean(StepsTotal2$steps)
median(StepsTotal2$steps)
day <- weekdays(activity$date)
daylevel <- vector()
for (i in 1:nrow(activity)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
activity$daylevel <- daylevel
activity$daylevel <- factor(activity$daylevel)
stepsByDay <- aggregate(steps ~ interval + daylevel, data = activity, mean)
names(stepsByDay) <- c("interval", "daylevel", "steps")
xyplot(steps ~ interval | daylevel, stepsByDay, type = "l", layout = c(1, 2),
xlab = "Interval", ylab = "Number of steps")
